#!/usr/bin/php
<?php
// reads a diff over json data, generated with `diff -U 0 dump1.json dump2.json | ./mysqljsondiff`
// outputs sql statements as sql-patchfile

function sql_delete($row) {
  $buffer = array();
  foreach ($row as $column => $value) {
    if ($column !== '$table' && $column !== '$unique') {
      if ($value !== null) {
        $buffer[] = "`".$column."` = '" . mysql_escape_string($value)."'";
      }
    }
  }
  return "DELETE FROM `" . $row['$table'] . "` WHERE " . implode(" AND ", $buffer) .  ";\n";
}

function sql_insert($row) {
  $buffer = array();
  foreach ($row as $column => $value) {
    if ($column !== '$table' && $column !== '$unique') {
      if ($value === null) {
        $buffer[] = "`".$column."` = NULL";
      } else {
        $buffer[] = "`".$column."` = '" . mysql_escape_string($value)."'";
      }
    }
  }
  return "INSERT INTO `" . $row['$table'] . "` SET " . implode(", ", $buffer) . ";\n";
}

function sql_update($from, $to) {
  if (serialize($from) === serialize($to)) {
    // not sure how this happens ...
    return "";
  }
  $values = array();
  $conditions = array();
  foreach ($to as $column => $value) {
    if ($column !== '$table' && $column !== '$unique') {
      if ($from[$column] === $value) {
        if ($value === null) {
          $conditions[] = "`".$column."` IS NULL";
        } else {
          $conditions[] = "`".$column."` = '" . mysql_escape_string($value)."'";
        }
      } else {
        if ($value === null) {
          $values[] = "`".$column."` = NULL";
        } else {
          $values[] = "`".$column."` = '" . mysql_escape_string($value)."'";
        }
      }
    }
  }
  return "UPDATE `" . $from['$table'] . "` SET " . implode(", ", $values) . " WHERE " . implode(" AND ", $conditions) .  ";\n";
}

$stdin = new SplFileObject("php://stdin");
$buffer = null;
while (!$stdin->eof()) {
  $line = $stdin->current();
  if (preg_match('/^([+-])([^+-]+.*)$/', $line, $reg)) {
    $row = json_decode($reg[2], true);
    if ($reg[1] === '+') {
      if ($buffer) {
        if ($buffer['$unique'] === $row['$unique']) {
          echo sql_update($buffer, $row);
        } else {
          echo sql_delete($buffer);
          echo sql_insert($row);
        }
        $buffer = null;
      } else {
        echo sql_insert($row);
      }
    } else {
      if ($buffer) {
        echo sql_delete($buffer);
      }
      $buffer = $row;
    }
  }
  $stdin->next();
}
